{"version":3,"file":"static/js/837.c364f9e3.chunk.js","mappings":"wNAEaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAV,EAIpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAH4B,SAAAH,GAAK,OAAIA,EAAMI,SAASC,KAAnB,EAGhBN,IACjB,SAACK,EAAUH,GACT,OAAOG,EAASH,QAAO,SAAAK,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASR,EAAOO,cADf,GAG/B,I,kBCVUE,EAAOC,EAAAA,GAAAA,GAAH,mFAMJC,EAAOD,EAAAA,GAAAA,GAAH,wDAKJE,EAASF,EAAAA,GAAAA,OAAH,gH,kBCmBnB,EA1BqB,WACnB,IAAMG,GAAmBC,EAAAA,EAAAA,IAAYb,GAC/Bc,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,SAACN,EAAD,UACGI,EAAiBM,KAAI,YAA0B,IAAvBb,EAAsB,EAAtBA,KAAMc,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpC,OACE,UAACV,EAAD,YACE,4BAAOL,EAAP,QACA,4BAAOc,EAAP,QAEA,SAACR,EAAD,CAAQU,KAAK,SAASC,QAAS,kBAAMR,GAASS,EAAAA,EAAAA,IAAcH,GAA7B,EAA/B,sBAJSA,EASd,KAGN,EC5BKI,GAAcC,E,OAAAA,IAAY,CAC9BpB,KAAM,SACNqB,aAAc,GACdC,SAAU,CACRC,UAAW,CACTC,QADS,SACDC,EADC,GAEP,OADsB,EAAXC,OAEZ,MAKQH,EAAcJ,EAAYQ,QAA1BJ,UCQf,GDP6BJ,EAAYK,QCV1B,WACb,IAAM9B,GAASc,EAAAA,EAAAA,IAAYhB,GACrBiB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,oDACA,kBACEM,KAAK,OACLY,MAAOlC,EACPmC,SAAU,SAAAC,GAAG,OAAIrB,EAASc,EAAUO,EAAIC,OAAOH,OAAlC,EACbI,YAAY,aAInB,GCbKC,EAAY,CAChBC,QAAS,OACTC,WAAY,WACZC,aAAc,IAGD,SAASC,IACtB,IAAM5B,GAAWC,EAAAA,EAAAA,MACX4B,GAAoB9B,EAAAA,EAAAA,IAAYb,GAItC,OAFAgB,EAAAA,EAAAA,YAAU,kBAAMF,GAASG,EAAAA,EAAAA,MAAf,GAAiC,CAACH,KAG1C,iBAAK8B,MAAON,EAAZ,WACE,SAAC,EAAD,KACA,yBAAMK,GAAqB,oBAC3B,sCACA,SAACE,EAAD,MAGL,C","sources":["Redux/Contacts/selectors.js","components/Contacts/ContactsStyled.js","components/Contacts/Contacts.js","Redux/Filter/filterSlice.js","components/Filter/Filter.js","Redux/views/ContactsView.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  background-color: #ffff00;\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'Redux/Contacts/selectors';\nimport { List, Item, Button } from './ContactsStyled';\nimport { fetchContacts, deleteContact } from 'Redux/Contacts/contactsAPI';\n\nconst ContactsList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, phone, id }) => {\n        return (\n          <Item key={id}>\n            <span>{name}:</span>\n            <span>{phone}:</span>\n\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ContactsList;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    setFilter: {\n      reducer(_, { payload }) {\n        return payload;\n      },\n    },\n  },\n});\n\nexport const { setFilter } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'Redux/Filter/filterSlice';\nimport { selectFilter } from 'Redux/Contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <div>Find contacts by name</div>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(setFilter(evt.target.value))}\n        placeholder=\"search\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactsList from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter';\nimport { selectVisibleContacts } from 'Redux/Contacts/selectors';\nimport { fetchContacts } from 'Redux/Contacts/contactsAPI';\n\nconst barStyles = {\n  display: 'flex',\n  alignItems: 'flex-end',\n  marginBottom: 20,\n};\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <div style={barStyles}>\n      <Filter />\n      <div>{isLoadingContacts && 'Please wait...'}</div>\n      <h1>Contacts</h1>\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["selectFilter","state","filter","selectVisibleContacts","createSelector","contacts","items","contact","name","toLowerCase","includes","List","styled","Item","Button","filteredContacts","useSelector","dispatch","useDispatch","useEffect","fetchContacts","map","phone","id","type","onClick","deleteContact","filterSlice","createSlice","initialState","reducers","setFilter","reducer","_","payload","actions","value","onChange","evt","target","placeholder","barStyles","display","alignItems","marginBottom","ContactsView","isLoadingContacts","style","Contacts"],"sourceRoot":""}